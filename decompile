#!/usr/bin/env node

// notes/todos:
// - simple skips should (ideally) cleave the reaching set into taken/not taken
//   successor sets based on the values they inspect. The precision of this approach
//   is unclear to me right now; can we be more aggressive and establish invariants
//   for variables other than the variables directly tested by branches?
// - if I modeled dt I could calculate vx := dt using the max value set as an upper bound.
// - I'm starting to wonder if the original interpreter treated 'sprite' as drawing
//   a sprite of height n as n+1 pixels tall, achieving 2-16 tall sprites...

var fs = require('fs');
var d  = require('./decompiler.js');

var buff = fs.readFileSync(process.argv[2]);
d.analyze(buff, { shiftQuirks:false, loadStoreQuirks:false });
console.log(d.formatProgram(buff.length));
